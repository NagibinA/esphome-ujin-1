# https://stuvel.eu/post/2022-06-05-esphome-touch-dimmer/

#-------------------------------------------
# Add yaml 
#packages:
#  but: !include 
#    file: packages/ujin/button.yaml
#    vars:
#      one_butt: GPIO15
#      two_butt: GPIO2
#      touch_threshold: 1000 #1150
#      delta_threshold: 5
#      setup_threshold: false #true
# and copy file esphome/packages/ujin

esphome:
  includes:
    - packages/lume/touch-dimming.h 
  on_boot:
    - priority: 500
      then:
        - lambda: new TouchDimmer("dimm1", light_dimmer1, left_touch, binary_dimm1);
        - lambda: new TouchDimmer("dimm2", light_dimmer2, right_touch, binary_dimm2);   
#-------------------------------------------
# TOUCH
#-------------------------------------------
esp32_touch:
  setup_mode: $setup_threshold


#-------------------------------------------
# BINARY SENSOR
#-------------------------------------------
binary_sensor:
  - platform: esp32_touch
    name: "${name} левая кнопка"
    id: left_touch
    pin: $one_butt
    icon: mdi:gesture-tap-button
    threshold: $touch_threshold
    on_click: 
      then: 
   #     - lambda: |-
    #        if id(binary_dimm1) {
    #          const float id(light_dimmer1).current_values.get_brightness();
    #          const bool id(light_dimmer1).current_values.is_on();  
    #          dimming_dir = id(light_dimmer1).current_values.get_brightness() > 0.5f ? 1 : -1;
    #          if (!is_on || this->dimming_dir == 0 || cur_bright <= 0.0f) {
    #            this->dimming_dir = 1;
    #            // Once we start increasing the brightness, it should start at 0%.
    #            id(light_dimmer1).set_brightness(0.0f);
    #          }
    #          else if (cur_bright >= 1.0f ) {
    #            this->dimming_dir = -1;
    #          }
    #          else {
    #            this->dimming_dir *= -1;
    #          }
    #        }

        - if:
            condition:
              switch.is_on: sound
            then:
              - rtttl.play: 'short:d=20,o=5,b=100:e6'  

  - platform: esp32_touch
    name: "${name} правая кнопка"
    id: right_touch
    pin: $two_butt
    icon: mdi:gesture-tap-button
    threshold: $touch_threshold
    on_click: 
      then:
        - if:
            condition:
              switch.is_on: sound
            then:
              - rtttl.play: 'short:d=20,o=5,b=100:e6'  

  - platform: template
    id: binary_dimm1

  - platform: template
    id: binary_dimm2              
#-------------------------------------------
# SELECT
#-------------------------------------------
select:
  - platform: template
    name: "Чувствительность кнопок"
    id: sensitivity_of_touch_id
    entity_category: config
    icon: mdi:gesture-tap-hold
    options:
      - "Низкая"              
      - "Средняя"             
      - "Высокая"          
    initial_option: "Средняя"
    optimistic: true
    on_value:
      then:
        - lambda: |-
            switch(i) {
              case 0: 
                id(right_touch).set_threshold ($touch_threshold - $delta_threshold); 
                id(left_touch).set_threshold ($touch_threshold - $delta_threshold); 
                break;
              case 1:  
                id(right_touch).set_threshold ($touch_threshold); 
                id(left_touch).set_threshold ($touch_threshold); 
                break;
              case 2:  
                id(right_touch).set_threshold ($touch_threshold + $delta_threshold); 
                id(left_touch).set_threshold ($touch_threshold + $delta_threshold); 
                break;
            }
              
              
              
              
